{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
### The files details \
\
1. Cleaning data.py\
This is file will clean the row data from CincinnatiRaw.xml file, so it is the first to be used.\
\
\
2. Creator.py\
This is the file that will create the tables in CSV format after cleaning the data by the first file.\
\
3. schema.py\
This file has the schema that Creator.py will rely on.\
\
4. GetSample.py\
This file will get a sample from Cincinnati.xml and write CincinnatiSample.osm\
\
5. Project+3+Cincinnati+OSM-3.html\
The report file.\
\
6. CincinnatiRaw.xml\
This is the raw file before cleaning.\
\
7. Cincinnati.xml\
This the file after cleaning.\
\
8. Cincinnati \
This is the SQL database file.\
\
9. CincinnatiSample.osm\
This is sample data from the cleaned version.\
\
10.  Project 3 Cincinnati OSM.ipynb\
This is the notebook in case you want to execute the codes\
\
\
### References \
\
1. I used most of the codes in the Case Study and edited it.\
\
2. I got some ideas from the provided Sample Project.\

\b https://gist.github.com/carlward/54ec1c91b62a5f911c42\
\

\b0 3. I used python tabulate library for better presentation  \

\b https://bitbucket.org/astanin/python-tabulate\
}